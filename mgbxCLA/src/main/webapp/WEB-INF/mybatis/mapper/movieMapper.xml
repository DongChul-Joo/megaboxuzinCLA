<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="movie">
	<select id="listShowingMovie" resultType="com.sp.movie.Movie">
		SELECT movieCode, movieNm, audits, thumbNail
			FROM movie
			WHERE endDate > SYSDATE
	</select>
	 
	<select id="movieDetail" parameterType="Integer" resultType="com.sp.movie.Movie">
		SELECT movieCode, movieNm, audits, thumbNail, movieStory, TO_CHAR(startDate,'YYYY.MM.DD') startDate, TO_CHAR(endDate, 'YYYY.MM.DD') endDate
			FROM movie
			WHERE movieCode=#{movieCode}
	</select>
	 
	 
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM movie m
	</select>
	
	
	<select id="listReply" parameterType="map" resultType="com.sp.movie.Movie">
		SELECT r.movieCode, r.userId, r.content, TO_CHAR(r.created, 'YY.MM.DD') created
		FROM moviereply r
		JOIN member m on m.userId = r.userId
		JOIN movie e on e.movieCode = r.movieCode
		WHERE r.movieCode=#{movieCode}
		ORDER BY r.created DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM movieReply
	</select>
	
	<insert id="insertReply" parameterType="com.sp.movie.Movie">
		INSERT ALL
		INTO movieReply(movieCode, userId, content, created) values(moviecode, userId, content, created)
		INTO movieScore(movieCode, userId, movieScores) values(moviecode, userId, movieScores)
		select * from dual
	</insert>
	
	
</mapper>