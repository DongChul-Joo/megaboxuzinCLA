<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="movie">
	<select id="listShowingMovie" resultType="com.sp.movie.Movie">
		SELECT movieCode, movieNm, audits, thumbNail
			FROM movie
			WHERE endDate > SYSDATE
	</select>
	 
	<select id="movieDetail" parameterType="Integer" resultType="com.sp.movie.Movie">
		SELECT movieCode, movieNm, audits, thumbNail, movieStory, TO_CHAR(startDate,'YYYY.MM.DD') startDate,
			 TO_CHAR(endDate, 'YYYY.MM.DD') endDate,
			 (select TRUNC(NVL(AVG(movieScores)*2,0),1) from movieScore where movieCode=#{movieCode}) movieScores
			FROM movie
			WHERE movieCode=#{movieCode}
	</select>
	 
	 
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM movie m
	</select>
	
	
	<select id="listReply" parameterType="map" resultType="com.sp.movie.Movie">
		SELECT r.movieCode, r.userId, r.content, TO_CHAR(r.created, 'YY.MM.DD') created, s.movieScores
		FROM moviereply r
		JOIN member m on m.userId = r.userId
		JOIN movie e on e.movieCode = r.movieCode
		JOIN movieScore s on s.movieCode = e.movieCode
		WHERE r.movieCode=#{movieCode}
		ORDER BY r.created DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM movieReply
	</select>
	
	<select id="insertReply" parameterType="com.sp.movie.Movie">
		INSERT ALL
		INTO movieReply(movieCode, userId, content, created) values(#{movieCode}, #{userId}, #{content}, sysdate)
		INTO movieScore(movieCode, userId, movieScores) values(#{movieCode}, #{userId}, #{movieScores})
		select * from dual
	</select>
	
	<delete id="deleteMovieReply" parameterType="map">
		delete FROM movieReply where movieCode=#{movieCode} and userId=#{userId}
	</delete>
	
	<delete id="deleteMovieScore" parameterType="map">
		delete FROM movieScore where movieCode=#{movieCode}
	</delete>
	
	<update id="updateReply" parameterType="map">
		update movieReply set content = #{content} where movieCode=#{movieCode}
	</update> 
	
</mapper>