<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="event">
	
	<sql id="where-list">
		<if test="condition=='all'">
			( INSTR(subject, #{keyword}) &gt; 0
				OR INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject'">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content'">
			INSTR(content, #{keyword}) &gt; 0 
		</if>
		<if test="condition=='created'">
			( TO_CHAR(created, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(created, 'YYYYMMDD') = #{keyword})
		</if>
		
	</sql>
	
	<select id="listCategory" resultType="com.sp.event.Event">
		SELECT eCategoryCode, eCategoryName 
		FROM eventCategory
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM event e
		JOIN member m ON e.userId=m.userId
		<where>
			<if test="ecategoryCode!=0">
				ecategoryCode = #{ecategoryCode}
			</if>
			<choose>
				<when test="state==1">
				    AND edate &gt;= SYSDATE
				</when>
				<otherwise>
				    AND edate &lt; SYSDATE
				</otherwise>
			</choose>
			<if test="keyword != null and keyword != ''">
				AND <include refid="where-list"/>
			</if>
		</where>		
	</select>
	
	<select id="listEvent" parameterType="map" resultType="com.sp.event.Event">
		SELECT ecode, e.userId, TO_CHAR(sdate, 'yyyy-mm-dd') as sdate, TO_CHAR(edate, 'yyyy-mm-dd') as edate,
		subject, TO_CHAR(created, 'yyyy-mm-dd') as created, imageFilename, lott, eLink, mCount
		FROM event e
		JOIN member m ON e.userId=m.userId
		<where>
			<if test="ecategoryCode!=0">
				ecategoryCode = #{ecategoryCode}
			</if>
			<choose>
				<when test="state==1">
				    AND edate &gt;= SYSDATE
				</when>
				<otherwise>
				    AND edate &lt; SYSDATE
				</otherwise>
			</choose>
			<if test="keyword != null and keyword != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
		ORDER BY ecode DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="readEvent" parameterType="Integer" resultType="com.sp.event.Event">
		SELECT ecode, subject, TO_CHAR(sdate, 'yyyy-mm-dd') as sdate, TO_CHAR(edate, 'yyyy-mm-dd') as edate,
				content, TO_CHAR(created, 'yyyy-mm-dd') as created, imageFilename, lott,
				TO_CHAR(lottDate, 'yyyy-mm-dd') as lottDate, elink, mcount
		FROM event e
		JOIN member m ON e.userId=m.userId
		WHERE ecode=#{ecode}
	</select>
	
	<!-- 댓글 -->
	<insert id="insertReply" parameterType="com.sp.event.Reply">
		INSERT INTO eventReply(rcode, answer, ecode, userId, content)
			VALUES (eventReply_seq.NEXTVAL, #{answer}, #{ecode}, #{userId}, #{content})
	</insert>

	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM eventReply
		WHERE ecode=#{ecode} AND answer=0
	</select>
	
	<!-- 댓글 리스트 -->
	<select id="listReply" parameterType="map" resultType="com.sp.event.Reply">
		SELECT r.rcode, r.userId, userName, r.ecode, r.content, r.created,
				 NVL(a.answerCount, 0) answerCount,
				 NVL(likeCount, 0) likeCount,
				 NVL(disLikeCount, 0) disLikeCount
		FROM eventReply r
		JOIN member  m ON r.userId = m.userId
		JOIN customer  c ON m.customerCode = c.customerCode
		LEFT OUTER JOIN (
			SELECT answer, COUNT(*) answerCount
			FROM eventReply WHERE answer!=0 GROUP BY answer
		) a ON r.rcode = a.answer
		LEFT OUTER JOIN (
			SELECT rcode, COUNT(DECODE(like_Hate, 1, 1)) likeCount,
				   COUNT(DECODE(like_Hate, 0, 1)) disLikeCount
			FROM eventReplyLike GROUP BY rcode
		) c ON r.rcode = c.rcode
		WHERE r.ecode = #{ecode} AND r.answer=0
		ORDER BY r.rcode DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 댓글 및 답글 삭제 -->
	<delete id="deleteReply" parameterType="map">
		DELETE FROM eventReply WHERE 
		<if test="mode=='reply' ">
			rcode IN (
				SELECT rcode FROM eventReply
					START WITH rcode=#{rcode}
					CONNECT BY PRIOR rcode = answer 
			)
		</if>
		<if test="mode=='answer' ">
			rcode = #{rcode}
		</if>
	</delete>
	
	<!-- 댓글의 답글 개수 -->
	<select id="replyAnswerCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM eventReply WHERE answer = #{answer}
	</select>
	
	<!-- 댓글의 답글 리스트 -->
	<select id="listReplyAnswer" parameterType="Integer" resultType="com.sp.event.Reply">
		SELECT rcode, ecode, r.userId, userName, content, created, answer
		FROM eventReply r
		JOIN member m ON r.userId = m.userId
		JOIN customer  c ON m.customerCode = c.customerCode
		WHERE answer = #{answer}
		ORDER BY rcode DESC
	</select>
	
	<!-- 좋아요/싫어요 추가 -->
	<insert id="insertReplyLike" parameterType="map">
		INSERT INTO eventReplyLike(rcode, userId, like_Hate)
			VALUES (#{rcode}, #{userId}, #{like_Hate})
	</insert>
	
	<!-- 좋아요/싫어요 개수 -->
	<select id="replyLikeCount" parameterType="map" resultType="map">
		SELECT COUNT(DECODE(like_Hate, 1, 1)) likeCount,
			   COUNT(DECODE(like_Hate, 0, 1)) disLikeCount
		FROM eventReplyLike WHERE rcode = #{rcode}
	</select>
	
	<!-- 신고 추가 -->
	<insert id="insertReplyReport" parameterType="map">
		INSERT INTO eventReplyReport(rcode, userId)
			VALUES (#{rcode}, #{userId})
	</insert>

</mapper>