<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypage">

	<select id="listReservation" parameterType="map" resultType="com.sp.mypage.MyPage">
		SELECT userId, userName, b.bookCode, TO_CHAR(b.bookdate, 'YYYY-MM-DD') bookdate , TO_CHAR(s.showingdate, 'YYYY-MM-DD') showingdate, 
        s.startTime,  cn.cmName, m.movienm , seatNumber,cancelInfo
    	FROM customer c 
        JOIN member m ON c.customerCode = m.customerCode
    	JOIN BOOKING b ON c.customerCode = b.memberCode 
    	JOIN showingSchedule s ON b.scheduleCode = s.scheduleCode 
    	JOIN SHOWINGMOVIE s1 ON s.showingcode = s1.showingcode 
    	JOIN cinema cn ON s1.cmCode = cn.cmcode 
    	JOIN movie m ON s1.movieCode = m.moviecode 
        left outer JOIN (select bookCode,LISTAGG(seatNumber, ',') WITHIN GROUP(ORDER BY bookCode)seatNumber from SEAT group by bookCode) s1 ON b.bookCode = s1.bookCode
    	WHERE userId = #{userId}
    	<if test="bookCode!=null">
    		and b.bookCode=#{bookCode}
    	</if>
    	
        order By b.bookCode desc
        
        <if test="offset!=null">
    		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
    	</if>
	</select>
	
	<select id="listStore" parameterType="map" resultType="com.sp.mypage.MyPage">
	 	SELECT userId, itemName , itemPart , TO_CHAR(b1.buydate, 'YYYY-MM-DD')buydate , b1.buyAmount , pdSudan , itemImg
		FROM ITEM i 
		JOIN BUYDETAIL b ON i.itemCode = b.itemCode
		JOIN BUYITEM b1 ON b.buyCode = b1.buyCode
		JOIN PAYDETAIL p ON b1.buyCode = p.buyCode
		WHERE userId = #{userId}
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="listMyMovieStory" parameterType="map" resultType="com.sp.mypage.MyPage">
		SELECT userId, userName, b.bookCode, TO_CHAR(b.bookdate, 'YYYY-MM-DD') bookdate , b.bookCount,
        TO_CHAR(s.showingdate, 'YYYY-MM-DD') showingdate, cn.cmName, m.movienm , m.thumbNail
    	FROM customer c 
        JOIN member m ON c.customerCode = m.customerCode
    	JOIN BOOKING b ON c.customerCode = b.memberCode 
    	JOIN showingSchedule s ON b.scheduleCode = s.scheduleCode 
    	JOIN SHOWINGMOVIE s1 ON s.showingcode = s1.showingcode 
    	JOIN cinema cn ON s1.cmCode = cn.cmcode 
    	JOIN movie m ON s1.movieCode = m.moviecode
    	WHERE userId = #{userId}
    	order By b.bookCode desc
    	OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="listPoint2" parameterType="map" resultType="com.sp.mypage.MyPage">
		SELECT mileage , TO_CHAR(msaveDate , 'YYYY-MM-DD') msaveDate
        FROM MILEAGE
        WHERE userId =  #{userId}
        OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	
	<select id="listPoint" parameterType="String" resultType="com.sp.mypage.MyPage">
		SELECT mileage
        FROM MILEAGE
        WHERE userId =  #{userId}
	</select>
	
	
	<select id="listMembership" parameterType="String" resultType="com.sp.mypage.MyPage">
		SELECT userName, m.membershipCode , m1.membershipName
        FROM membershipinfo m1
        JOIN member m ON m1.membershipCode = m.membershipCode
        JOIN customer c ON m.customerCode = c.customerCode
        where userId =  #{userId}
	</select>
	
	
	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   ( INSTR(subject, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'created' ">
			   ( TO_CHAR(created, 'YYYYMMDD') = #{keyword}
		          OR TO_CHAR(created, 'YYYY-MM-DD') = #{keyword} )
			</when>
			<when test="condition == 'content'">
			    DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		 	SELECT NVL(COUNT(*), 0)
	    	FROM customer c 
	        JOIN member m ON c.customerCode = m.customerCode
	    	JOIN BOOKING b ON c.customerCode = b.memberCode 
	    	JOIN showingSchedule s ON b.scheduleCode = s.scheduleCode 
	    	JOIN SHOWINGMOVIE s1 ON s.showingcode = s1.showingcode 
	    	JOIN cinema cn ON s1.cmCode = cn.cmcode 
	    	JOIN movie m ON s1.movieCode = m.moviecode 
	        JOIN SEAT s1 ON b.bookCode = s1.bookCode
			WHERE userId = #{userId}
	</select>
	
	<select id="dataCountMovie" parameterType="map" resultType="Integer">
			SELECT NVL(COUNT(*), 0)
	    	FROM customer c 
	        JOIN member m ON c.customerCode = m.customerCode
	    	JOIN BOOKING b ON c.customerCode = b.memberCode 
	    	JOIN showingSchedule s ON b.scheduleCode = s.scheduleCode 
	    	JOIN SHOWINGMOVIE s1 ON s.showingcode = s1.showingcode 
	    	JOIN cinema cn ON s1.cmCode = cn.cmcode 
	    	JOIN movie m ON s1.movieCode = m.moviecode
			WHERE userId = #{userId}
	</select>
	
	
	<select id="dataCountStore" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM ITEM i 
		JOIN BUYDETAIL b ON i.itemCode = b.itemCode
		JOIN BUYITEM b1 ON b.buyCode = b1.buyCode
		JOIN PAYDETAIL p ON b1.buyCode = p.buyCode
		WHERE userId = #{userId}
	</select>
	
	
	<select id="dataCountMileage" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
        FROM MILEAGE
        WHERE userId = #{userId}
	</select>
	
	

	
</mapper>